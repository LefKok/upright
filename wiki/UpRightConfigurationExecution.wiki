#summary How to config and run UpRight

First, users need to decide how many and what kinds of faults the system need to tolerate. Let l be the total number of Byzantine faults and c be the total number of faults (including Byzantine faults), then the whole system requires 2l+c+1 ordered nodes and l+c+1 execution nodes.

The configuration requires one membership file and several key files. The membership file defines the public information of all the nodes, including IP, ports, public keys, etc and this file should be distributed to every node. The key files define the private keys of all the nodes and they should only be distributed to necessary nodes.

This page provides a sample configuration, which contains one ordered node, two execution nodes and one client. The file layout should be:
{{{
test.properties
keys\
  ORDER0.privk.properties
  EXEC0.privk.properties
  EXEC1.privk.properties
  CLIENT0.privk.properties
}}}
The test.properties is the membership file and all the key files should be in the keys directory.

= Membership file =

The following is a simple example of Membership file. It contains one ordered node (l=c=0), two execution nodes (l=0 c=1) and one client.

{{{
orderCrashFailures = 0
orderLiarFailures = 0
execCrashFailures = 1
execLiarFailures = 0
clientCount = 1
filtered = false
filterCrashFailures = 0
filterLiarFailures = 0

ORDER.0 = localhost:8000 localhost:8001 localhost:8002 localhost:8003 8E0E166E2644B4DE35D97AD82F23D509A709C3BDA53979FB73275AD4F64252334E4586D804B38B94861B5B0D81D1CA01EC3F670D8CD02830EA0AEF7A5B29DB8F28745C1DD0153D093B90CC7ECAB7AB468383C213E3A134CAC2C9400B9BF4BF6014CFF29D34EC707CD25313F15973656CE15FA1B28A33D20F4109A38F8B0A67C5:10001

EXEC.0 = localhost:7000 localhost:7001 localhost:7002 localhost:7003 8E0E166E2644B4DE35D97AD82F23D509A709C3BDA53979FB73275AD4F64252334E4586D804B38B94861B5B0D81D1CA01EC3F670D8CD02830EA0AEF7A5B29DB8F28745C1DD0153D093B90CC7ECAB7AB468383C213E3A134CAC2C9400B9BF4BF6014CFF29D34EC707CD25313F15973656CE15FA1B28A33D20F4109A38F8B0A67C5:10001
EXEC.1 = localhost:7004 localhost:7005 localhost:7006 localhost:7007 8E0E166E2644B4DE35D97AD82F23D509A709C3BDA53979FB73275AD4F64252334E4586D804B38B94861B5B0D81D1CA01EC3F670D8CD02830EA0AEF7A5B29DB8F28745C1DD0153D093B90CC7ECAB7AB468383C213E3A134CAC2C9400B9BF4BF6014CFF29D34EC707CD25313F15973656CE15FA1B28A33D20F4109A38F8B0A67C5:10001

CLIENT.0 = localhost:9001 localhost:9002 localhost:9003 localhost:9004 8E0E166E2644B4DE35D97AD82F23D509A709C3BDA53979FB73275AD4F64252334E4586D804B38B94861B5B0D81D1CA01EC3F670D8CD02830EA0AEF7A5B29DB8F28745C1DD0153D093B90CC7ECAB7AB468383C213E3A134CAC2C9400B9BF4BF6014CFF29D34EC707CD25313F15973656CE15FA1B28A33D20F4109A38F8B0A67C5:10001
}}}


=Key file=
This is an example private key file:
{{{
PRIV = 8E0E166E2644B4DE35D97AD82F23D509A709C3BDA53979FB73275AD4F64252334E4586D804B38B94861B5B0D81D1CA01EC3F670D8CD02830EA0AEF7A5B29DB8F28745C1DD0153D093B90CC7ECAB7AB468383C213E3A134CAC2C9400B9BF4BF6014CFF29D34EC707CD25313F15973656CE15FA1B28A33D20F4109A38F8B0A67C5:55E2908F2215F22053005CF42D74058E636E54E8E8E71A27FB9434A78307CFF8F2FEB82B0C949CF43C2C77DD6FBAADDE81BE4788FAB4B347F7888B0737ECD3B01056331E11B3C66122A0C0E53A0E38C0823FAE6F5398C04398C1E41F0EE5CB33D91147676DC0F0B2BC93C02CCF767B30240C833A3A4EB73BF72F9930FF7F51D5
PUB = 8E0E166E2644B4DE35D97AD82F23D509A709C3BDA53979FB73275AD4F64252334E4586D804B38B94861B5B0D81D1CA01EC3F670D8CD02830EA0AEF7A5B29DB8F28745C1DD0153D093B90CC7ECAB7AB468383C213E3A134CAC2C9400B9BF4BF6014C
FF29D34EC707CD25313F15973656CE15FA1B28A33D20F4109A38F8B0A67C5:10001
SECRET = -3EA5ADF63362AB2CA44261DCC1C74ABA4AF0C32C39BCB09D5B7FCC006AE7CD12A5B9ACFCB937C9A724649F07755A820DFA4DAB55970533A4644BA38A37B3A9C4
}}}
The private key file must have the correct name. For example, the file for execution node 0 is EXEC0.privk.properties.

=Generate Configuration Files=
The configuration files seem to be complex? Don't be afraid. We have provided a tool to generate all these files. All you have to do is to decide how many crashes you want to tolerate and which machines you want to use. The tool will generate all the keys, ports and private key files for you.
Steps:
  # Create a file called "orders". List all the machines you want to use as ordered nodes. Each machine should occupy one line.
  # Create a file called "servers". List all the machines used as servers.
  # Create a file called "clients". List all the machines used as clients.
  # Create a file called "filters". List all the machines used as filtered nodes. Leave it as blank if no filtered nodes are used.
  # Run bftConfigGenerator.sh to generate the membership and key files. This script takes 8 arguments: 1 order crash failures; 2 order liar failures; 3 server crash failures; 4 server liar failures; 5 client number; 6 whether use filtered node or not; 7 filter crash failures; 8 filter liar failures. 6-8 are optional. If there are no 6-8, no filter nodes are used. For example, to generate the previous membership and key files, the command should be "bftConfigGenerator 0 0 1 0 1 >test.properties". And private key files are put into keys directory automatically.

===Notices===
  # The number of nodes in the orders/servers/clients/filters/ files should match with the argument of bftConfigGenerator command. For example, bftConfigGenerator 0 0 1 0 1 requires two server nodes. Then there should be two lines in the servers file. Otherwise, bftConfigGenerator will report an error.
  # bftConfigGenerator does not support multiple same types of nodes on the same machine. For example, if you want to put two clients on the same machine, there will be conflicts in ports. If you really want to do so, you need to modify the membership file manually. bftConfigGenerator DOES support different types of nodes on the same machine, e.g, one ordered node and one server on the same machine. However, this will reduce the availability of the system.
  # bftConfigGenerator use ports starting from 6000 for ordered nodes, ports starting from 7000 for servers and ports starting from 9000 for clients. If this has conflicts with your other applications, you need to modify bftConfigGenerator manually.

=Run UpRight=
  * Copy membership file to every machine and copy private key files to each corresponding machine.
  * To start ordered nodes:
    java -Djava.library.path=. -cp conf:bft.jar:FlexiCoreProvider-1.6p3.signed.jar:CoDec-build17-jdk13.jar BFT.order.OrderBaseNode 0 test.properties <br/>
    0 is the id of this ordered node. See the membership file to see the id of each node.
  * To stop ordered nodes: just kill the java process.
  * To start/stop clients and servers: this depends on the application.