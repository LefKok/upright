#summary The interface specification.

=Server Interface=
The application should implement *AppCPInterface*. It includes four functions:
  * execAsync: execute a request. After finished, the application should call CPAppInterface.execDone to send the result back.
  * execReadonly: execute a readonly request. UpRight provides optimization for readonly requests and they are much faster than normal requests. After finished, the application should call CPAppInterface.execReadonlyDone to send the result back.
  * sync: write all the application states into a snapshot file. Call CPAppInterface.syncDone when finished.
  * loadSnapshot: load the snapshot file. This is a blocking call.

The UpRight library provides the *CPAppInterface* for the application to communicate with the UpRight library:
  * setupApplication: register the application server to the UpRight library. *This function starts the UpRight server library*.
  * execDone: callback for execAsync
  * execReadonlyDone: callback for execReadonly
  * syncDone: callback for sync
  * getIP, getPort: get the client address information of a specific client
  * sendEvent: send a message to the client. Application should call this function only if the message is NOT a reply of a request. Otherwise, the application should call execDone or execReadonlyDone.
  


==Notices==
  * Never modify a log file or a snapshot file after returning it to UpRight.
  * The application must provide determined log and snapshot files. This means that after executing the same sequence of requests, the server should give the same log and snapshot file. There should be no randomness in these files. In reality, time, multi thread, etc, can cause non-determinisms and they should be carefully avoided.

=Application Client=
UpRight takes care of the network communication, so the client should not touch any socket code any more. Instead, UpRight provides a function for clients to send requests:
  * ClientShimInterface.execute: the request will be passed to the application server through the execAsync interface. Currently, execute is a blocking call and it will wait for the reply from the server.